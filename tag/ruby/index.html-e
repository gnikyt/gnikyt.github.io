<!DOCTYPE html>
<html>
<head>
	<!-- Theme: Attila by zutrinken, powered by: Ghost -->
	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />

	<title>ruby - OhMyBrew!</title>

	<meta name="HandheldFriendly" content="True" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />

	<link rel="stylesheet" type="text/css" href="../../assets/css/style.css?v=4f8314772c" />

	<link rel="shortcut icon" href="../../favicon.png" type="image/png" />
    <link rel="canonical" href="index.html" />
    <meta name="referrer" content="no-referrer-when-downgrade" />
    
    <meta property="og:site_name" content="OhMyBrew!" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="ruby - OhMyBrew!" />
    <meta property="og:url" content="https://ohmybrew.com/tag/ruby/" />
    <meta property="article:modified_time" content="2018-02-21T16:32:20.000Z" />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content="ruby - OhMyBrew!" />
    <meta name="twitter:url" content="https://ohmybrew.com/tag/ruby/" />
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Series",
    "publisher": {
        "@type": "Organization",
        "name": "OhMyBrew!",
        "logo": {
            "@type": "ImageObject",
            "url": "https://ohmybrew.com/favicon.png",
            "width": 60,
            "height": 60
        }
    },
    "url": "https://ohmybrew.com/tag/ruby/",
    "name": "ruby",
    "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "https://ohmybrew.com/"
    }
}
    </script>

    <script type="text/javascript" src="../../public/ghost-sdk.js?v=4f8314772c"></script>
<script type="text/javascript">
ghost.init({
	clientId: "ghost-frontend",
	clientSecret: "af2244026b4c"
});
</script>
    <meta name="generator" content="Ghost 1.21" />
    <link rel="alternate" type="application/rss+xml" title="OhMyBrew!" href="../../rss/index.html" />
    <script async src="https://www.google-analytics.com/analytics.js"></script>
<script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-101589108-1', 'auto');
    ga('send', 'pageview');
</script>
</head>

<body class="tag-template tag-ruby">
	
	<nav id="menu">
	<a class="close-button">Close</a>
	<div class="nav-wrapper">
		<p class="nav-label">Menu</p>
		<ul>
			<li class="nav-home" role="presentation"><a href="../../index.html">Home</a></li>
			<li class="nav-github" role="presentation"><a href="https://github.com/ohmybrew"><i class="ic ic-star"></i> Github</a></li>
			
			<li class="nav-rss"><a href="../../rss/index.html"><i class="ic ic-rss"></i> Subscribe</a></li>
		</ul>
	</div>
</nav>
	
	<section id="wrapper">
		<a class="hidden-close"></a>
		
<header id="blog-header">
	<div class="inner">
		<nav id="navigation">
			<span id="home-button" class="nav-button">
				<a class="home-button" href="../../index.html" title="Home"><i class="ic ic-arrow-left"></i> Home</a>
			</span>
			<span id="menu-button" class="nav-button">
				<a class="menu-button"><i class="ic ic-menu"></i> Menu</a>
			</span>
		</nav>
		<h1 class="blog-name">ruby</h1>
		<span class="blog-description">
			Posts: 10
		</span>
	</div>
</header>

<div id="index" class="container">

	<main class="content" role="main">
	
		<div class="extra-pagination">
	<nav class="pagination" role="pagination">
	<div class="inner">
		<span class="pagination-info">Page 1 of 1</span>
		<div class="clear"></div>
	</div>
</nav>
</div>


<article class="post tag-rails-6 tag-ruby tag-process tag-programming">
	<div class="inner">
		<header class="post-header">
			<h2 class="post-title"><a href="../../moving-away-from-cancancan-to-pundit/index.html">Moving away from CanCanCan to Pundit</a></h2>
			<span class="post-meta"><a href="../../author/tyler-king/index.html">Tyler King</a>  on <a href="../rails-6/index.html">rails</a>, <a href="index.html">ruby</a>, <a href="../process/index.html">process</a>, <a href="../programming/index.html">programming</a> | <time datetime="2017-03-29">29 Mar 2017</time></span>
			<div class="clear"></div>
		</header>

		<section class="post-excerpt">
			<p>What is Pundit &amp; CanCanCan? Pundit is a simple, platform-agnostic, plain-ol-Ruby authorization library. It provides a set of helpers to get authorization done simply no matter if its plain Ruby, Sinatra, or Rails. CanCanCan is a fork of the original CanCan Gem for Rails. CanCanCan, like Pundit, is an authorization&hellip;</p>
		</section>
	</div>
</article>


<article class="post tag-open-source tag-ruby tag-shopify tag-rails-5 tag-programming">
	<div class="inner">
		<header class="post-header">
			<h2 class="post-title"><a href="../../shopify-app-whitelist-gem/index.html">shopify_app_whitelist Gem</a></h2>
			<span class="post-meta"><a href="../../author/tyler-king/index.html">Tyler King</a>  on <a href="../open-source/index.html">open-source</a>, <a href="index.html">ruby</a>, <a href="../shopify/index.html">shopify</a>, <a href="../rails-5/index.html">rails</a>, <a href="../programming/index.html">programming</a> | <time datetime="2016-11-26">26 Nov 2016</time></span>
			<div class="clear"></div>
		</header>

		<section class="post-excerpt">
			<p>I regularly use shopify_app. Its a great way to get an app, embedded or not, up and running with Rails. Sometimes I'll create apps with shopify_app which are to be used by only one store. These apps sometimes have a front-end component for the themes... proxy integration, or&hellip;</p>
		</section>
	</div>
</article>


<article class="post tag-ruby tag-process tag-programming">
	<div class="inner">
		<header class="post-header">
			<h2 class="post-title"><a href="../../journey-to-sucker-punch/index.html">Journey to Sucker Punch</a></h2>
			<span class="post-meta"><a href="../../author/tyler-king/index.html">Tyler King</a>  on <a href="index.html">ruby</a>, <a href="../process/index.html">process</a>, <a href="../programming/index.html">programming</a> | <time datetime="2016-11-25">25 Nov 2016</time></span>
			<div class="clear"></div>
		</header>

		<section class="post-excerpt">
			<p>Background jobs are great. Mailing, data processing, image processing, database operationsâ€¦ you name it. If its a repetitive blocking process for the user and its not time-sensitive, then its probably suited to be moved to a job. delayed_job My go-to ActiveJob adapter for Rails has always been Delayed Job.&hellip;</p>
		</section>
	</div>
</article>


<article class="post tag-tip tag-programming tag-ruby tag-rails-4">
	<div class="inner">
		<header class="post-header">
			<h2 class="post-title"><a href="../../precompiling-assets-in-your-rails-engine/index.html">Precompiling Assets In Your Rails Engine</a></h2>
			<span class="post-meta"><a href="../../author/tyler-king/index.html">Tyler King</a>  on <a href="../tip/index.html">tip</a>, <a href="../programming/index.html">programming</a>, <a href="index.html">ruby</a>, <a href="../rails-4/index.html">rails</a> | <time datetime="2016-05-03">03 May 2016</time></span>
			<div class="clear"></div>
		</header>

		<section class="post-excerpt">
			<p>This'll be a quick post to highlight an issue I had where I needed to precompile an asset file for my Rails engine that was not to be compiled with the other engine assets. Recently, I added TinyMCE-Rails to Guts instead of rolling it in on its own. This allows&hellip;</p>
		</section>
	</div>
</article>


<article class="post tag-ruby tag-open-source tag-rails-3 tag-programming">
	<div class="inner">
		<header class="post-header">
			<h2 class="post-title"><a href="../../guts-now-with-multisite/index.html">Guts: With Multisite</a></h2>
			<span class="post-meta"><a href="../../author/tyler-king/index.html">Tyler King</a>  on <a href="index.html">ruby</a>, <a href="../open-source/index.html">open-source</a>, <a href="../rails-3/index.html">rails</a>, <a href="../programming/index.html">programming</a> | <time datetime="2016-04-24">24 Apr 2016</time></span>
			<div class="clear"></div>
		</header>

		<section class="post-excerpt">
			<p>This is just a quick and proud update that I've released a lengthy update to Guts which includes multisite abilities. Meaning, you can run the same Guts admin interface for multiple domains. It also includes a handy concern for enabling multisite support on your application. Right from the docs is&hellip;</p>
		</section>
	</div>
</article>


<article class="post tag-ruby tag-programming tag-process">
	<div class="inner">
		<header class="post-header">
			<h2 class="post-title"><a href="../../building-a-simple-redis-autosuggest-with-ruby/index.html">Building a Simple Redis Autosuggest with Ruby</a></h2>
			<span class="post-meta"><a href="../../author/tyler-king/index.html">Tyler King</a>  on <a href="index.html">ruby</a>, <a href="../programming/index.html">programming</a>, <a href="../process/index.html">process</a> | <time datetime="2016-03-01">01 Mar 2016</time></span>
			<div class="clear"></div>
		</header>

		<section class="post-excerpt">
			<p>So you have a search box on your website.. an article search, a product search.. whatever it may be, you may find yourself the need to display suggested results to your user based on what they type. Redis is the perfect solution. Planning Let's say we have a bunch of&hellip;</p>
		</section>
	</div>
</article>


<article class="post tag-rails-2 tag-programming tag-ruby tag-tip tag-process">
	<div class="inner">
		<header class="post-header">
			<h2 class="post-title"><a href="../../extending-a-rails-engine/index.html">Extending a Rails Engine</a></h2>
			<span class="post-meta"><a href="../../author/tyler-king/index.html">Tyler King</a>  on <a href="../rails-2/index.html">rails</a>, <a href="../programming/index.html">programming</a>, <a href="index.html">ruby</a>, <a href="../tip/index.html">tip</a>, <a href="../process/index.html">process</a> | <time datetime="2016-02-20">20 Feb 2016</time></span>
			<div class="clear"></div>
		</header>

		<section class="post-excerpt">
			<p>Redesigning my CMS in Rails has been great fun. Theres been many challenges faced, and many conquered (like having 100% code coverage :D). One thought that crossed my mind after building the monster was how do you extend an engine? By extending, I mean to add or overwrite methods of&hellip;</p>
		</section>
	</div>
</article>


<article class="post tag-ruby tag-rails tag-programming tag-tip">
	<div class="inner">
		<header class="post-header">
			<h2 class="post-title"><a href="../../polymorphic-and-route-concerns/index.html">Polymorphic and Route Concerns... who is who?</a></h2>
			<span class="post-meta"><a href="../../author/tyler-king/index.html">Tyler King</a>  on <a href="index.html">ruby</a>, <a href="../rails/index.html">rails</a>, <a href="../programming/index.html">programming</a>, <a href="../tip/index.html">tip</a> | <time datetime="2016-01-01">01 Jan 2016</time></span>
			<div class="clear"></div>
		</header>

		<section class="post-excerpt">
			<p>The goal of this post is to outline some tips on easily figuring out the parent object for a polymorphic modal/route/controller. Let's start with the basics... Polymorphic For those unfamiliar to it, Polymorphic is an Active Record association type where a model can belong to other models. As&hellip;</p>
		</section>
	</div>
</article>


<article class="post tag-sinatra tag-ruby tag-process tag-liquid">
	<div class="inner">
		<header class="post-header">
			<h2 class="post-title"><a href="../../activerecord-and-liquid-drops-with-sinatra/index.html">ActiveRecord and Liquid Drops with Sinatra</a></h2>
			<span class="post-meta"><a href="../../author/tyler-king/index.html">Tyler King</a>  on <a href="../sinatra/index.html">sinatra</a>, <a href="index.html">ruby</a>, <a href="../process/index.html">process</a>, <a href="../liquid/index.html">liquid</a> | <time datetime="2015-10-14">14 Oct 2015</time></span>
			<div class="clear"></div>
		</header>

		<section class="post-excerpt">
			<p>Normally I use ERB when doing templates but there was a special use-case recently where I needed to allow the app user to modify a specific template. Liquid templates (what Jekyll and Shopify uses) was perfect for this situation because it has a simple syntax for anyone to pick up&hellip;</p>
		</section>
	</div>
</article>


<article class="post tag-ruby tag-shopify tag-tip tag-programming">
	<div class="inner">
		<header class="post-header">
			<h2 class="post-title"><a href="../../quickly-get-all-products-in-your-shopify-store-with-ruby/index.html">Quickly Get All Products in Your Shopify Store with Ruby</a></h2>
			<span class="post-meta"><a href="../../author/tyler-king/index.html">Tyler King</a>  on <a href="index.html">ruby</a>, <a href="../shopify/index.html">shopify</a>, <a href="../tip/index.html">tip</a>, <a href="../programming/index.html">programming</a> | <time datetime="2014-11-05">05 Nov 2014</time></span>
			<div class="clear"></div>
		</header>

		<section class="post-excerpt">
			<p>This is a simple snippet I've used over-and-over again this year to batch process products (modify tags, pricing, etc). It simply calculates the number of pages of products, pushes each page of products into a master array and returns them all. Should work well for others so I thought I&hellip;</p>
		</section>
	</div>
</article>


<nav class="pagination" role="pagination">
	<div class="inner">
		<span class="pagination-info">Page 1 of 1</span>
		<div class="clear"></div>
	</div>
</nav>	
	</main>

</div>
		<div id="body-class" style="display: none;" class="tag-template tag-ruby"></div>
	
		<footer id="footer">
			<div class="inner">
			</div>
		</footer>
	</section>

	<script type="text/javascript" src="../../assets/js/script.js?v=4f8314772c"></script>

	
</body>
</html>
