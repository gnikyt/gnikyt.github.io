   #[1]gnikyt feed

   [2]gnikyt Code ramblings.

                 Polymorphic and Route Concerns... who is who?

   /* Jan 01, 2016 — 5.1KB */

   The goal of this post is to outline some tips on easily figuring out
   the parent object for a polymorphic modal/route/controller. Let’s start
   with the basics…

Polymorphic

   For those unfamiliar to it, [3]Polymorphic is an Active Record
   association type where a model can belong to other models. As a simple
   example, you could have an Ingredient model which can be polymorphic
   and belong to different types of models such as Baking, Cooking, or
   WitchesBrew.

Route Concerns

   These are used in routing for Rails where you’re able to declare common
   routes for resources. An example of this can be a picture concern,
   where many resources can have a picture route.

concern :picturable do
  resources :pictures
end
# ...
resources :users, concerns: [:picturable]
resources :customers, concerns: [:picturable]

The problem

   If your polymorphic modal has a controller, how do you know what object
   is using it? How do you get the object itself? Let’s start and assume I
   have a polymorphic modal for Metafields, so many models can have
   metafields and we’ll call it fieldable.

# modals/metafield.rb
module MyCoolApp
  class Metafield < ActiveRecord::Base
    belongs_to :fieldable, polymorphic: true
  end
end

# modals/user.rb
module MyCoolApp
  class User < ActiveRecord::Base
    # ...
    has_many :metafields, as: :fieldable, dependent: :destroy
    # ...
  end
end

# modals/movie.rb
module MyCoolApp
  class Movie < ActiveRecord::Base
    # ...
    has_many :metafields, as: :fieldable, dependent: :destroy
    # ...
  end
end

   So now, we have three models. The Metafield modal which is polymorphic
   and a User and a Movie modal which can have these metafields. The
   Metafield modal will create a table in the database with fieldable_type
   and fieldable_id which should reference the modal class and the
   object’s ID.

   Along with this, I’ve set up a Metafield controller so we can add,
   edit, and delete metafields for these other models. With all this put
   together, we’ll set up the routing concerns.

concern(:fieldable) { resources :metafields }
# ...
resources :users do
  concerns :fieldable
end
# ...
resouces :movies do
  concerns :fieldable
end

   Now, the user and movie resource routes will have metafield resource
   routes added to them. Which will create routes such as
   /users/metafields, /users/metafields/new, /movies/metafields/3/edit.

   However, for the metafield controller, how is it supposed to know if
   we’re accessing User metafields or Movie metafields when you’re adding
   and editing? You could do things such as base it on the URL, or manual
   section, but that’s not a great solution in the long run. There are
   easier and cleaner ways… by utilizing a mix of the routing concerns and
   a private method in the Metafield controller. Let’s change our concern
   in the routing now to accept options and parameters.

# Before
concern(:fieldable) { resources :metafields }
# After
concern(:fieldable) {|opts| resources :metafields, opts}

   Now let’s pass a parameter to the concern per resource route.

concern(:fieldable) {|opts| resources :metafields, opts}
# ...
resources :users do
  concerns :fieldable, fieldable_type: "MyCoolApp::Users"
end
# ...
resouces :movies do
  concerns :fieldable, fieldable_type: "MyCoolApp::Movies"
end

   So now we’re passing fieldable_type with the modal class to the concern
   which gets passed to the resource for metafields. We can now grab this
   parameter in the controller and it’ll help us figure out what modal is
   trying to access the metafields. Let’s add a method to the metafield
   controller now which will do this work for us.

module MyCoolApp
  class MetafieldsController < ApplicationController
      before_action :set_object
      # ...

      private
      def set_object
        # Converts (as example) "MyCoolApp::Movies" string to "movies_id"
        param_name   = "#{params[:fieldable_type].demodulize.underscore}_id"

        # Converts (as example) "MyCoolApp::Movies" string into a module referen
ce
        param_object = params[:fieldable_type].constantize

        # Grab the object now, as example: (object.find movie_id) -> MyCoolApp::
Movies.find 3
        @object = param_object.find params[param_name]
      end
  end
end

   As you can see above, everything is now in place. We convert the
   fieldable_type value we passed in the concern into a module reference
   and an ID for whose trying to access it. @object will not be the User
   object or Movie object trying to access the metafields.

   Lastly, we can tie this into the forms for metafields creation/editing:

# ...
<div class="hide">
  <%= f.text_field :fieldable_id, value: @object.id %>
  <%= f.text_field :fieldable_type, value: @object.class %>
</div>

   Now when saved, the metafield record in the database will automatically
   set the modal class and the ID for the object.

   [4]MD | [5]TXT | [6]CC-4.0

   This post is 9 years old and may contain outdated information.
     __________________________________________________________________

   [7]Ty King

Ty King

   A self-taught, seasoned, and versatile developer from Newfoundland.
   Crafting innovative solutions with care and expertise.
   [8]Github [9]About Me [10]CV [11]RSS
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *

References

   Visible links:
   1. /rss.xml
   2. /
   3. http://guides.rubyonrails.org/association_basics.html#polymorphic-associations
   4. /polymorphic-and-route-concerns/index.md
   5. /polymorphic-and-route-concerns/index.txt
   6. https://creativecommons.org/licenses/by/4.0/
   7. /about
   8. https://github.com/gnikyt
   9. /about
  10. /assets/files/cv.pdf
  11. /rss.xml

   Hidden links:
  13. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb1-1
  14. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb1-2
  15. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb1-3
  16. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb1-4
  17. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb1-5
  18. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb1-6
  19. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb2-1
  20. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb2-2
  21. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb2-3
  22. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb2-4
  23. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb2-5
  24. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb2-6
  25. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb3-1
  26. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb3-2
  27. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb3-3
  28. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb3-4
  29. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb3-5
  30. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb3-6
  31. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb3-7
  32. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb3-8
  33. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb4-1
  34. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb4-2
  35. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb4-3
  36. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb4-4
  37. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb4-5
  38. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb4-6
  39. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb4-7
  40. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb4-8
  41. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb5-1
  42. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb5-2
  43. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb5-3
  44. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb5-4
  45. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb5-5
  46. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb5-6
  47. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb5-7
  48. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb5-8
  49. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb5-9
  50. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb6-1
  51. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb6-2
  52. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb6-3
  53. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb6-4
  54. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb7-1
  55. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb7-2
  56. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb7-3
  57. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb7-4
  58. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb7-5
  59. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb7-6
  60. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb7-7
  61. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb7-8
  62. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb7-9
  63. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-1
  64. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-2
  65. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-3
  66. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-4
  67. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-5
  68. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-6
  69. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-7
  70. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-8
  71. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-9
  72. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-10
  73. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-11
  74. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-12
  75. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-13
  76. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-14
  77. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-15
  78. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-16
  79. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-17
  80. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb8-18
  81. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb9-1
  82. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb9-2
  83. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb9-3
  84. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb9-4
  85. localhost/tmp/lynxXXXX5J7vha/L3280017-8829TMP.html#cb9-5
