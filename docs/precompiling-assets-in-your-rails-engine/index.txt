   #[1]gnikyt feed

   [2]gnikyt Code ramblings.

                    Precompiling assets in your Rails Engine

   May 03, 2016

   This will be a quick post to highlight an issue I had where I needed to
   precompile an asset file for my Rails engine that was not to be
   compiled with the other engine assets.

   Recently, I added [3]TinyMCE-Rails to Guts instead of rolling it in on
   its own. This allows me to abstract TinyMCE so itʼs handled by the gem,
   and allows users to provide their own customizations and
   configurations.

   Previously, I had a custom plugin that was hard-coded into TinyMCE as a
   simple button to allow users to add media from Guts into the editor.
   Now, using the gem, I need to make this a plugin, but I found issues
   getting the plugin file into production… it would never appear in
   shared/public when deploying the website via Capistrano after
   precompile ran. I was frustrated at first but knew it had to be a
   simple answer, I just needed to tell Rails about the file.

   This was the directory structure:
app/
  assets/
    javascripts/
          guts/
              ...
        tinymce/
          plugins/
              guts_media/
                  plugin.js

   I needed my tinymce/plugins/ folder to move into public/assets/tinymce
   generated by the TinyMCE gem.

   After trial and error, the answer was simple and stupid… why didnʼt I
   think of it before? I simply need to open my engineʼs file and append
   my plugin path to assets.precompile provided by Rails. Here was the
   final working result (bottom of the file):
# Gutsʼ module namespace
module Guts
  # Gutsʼ engine class
  class Engine < :⭐:Engine
    # Isolate Guts routes
    isolate_namespace Guts

    # Autoload concerns
    config.autoload_paths << "#{config.root}/app/concerns"

    # Allow decorator usage for extending Guts
    config.to_prepare do
      Dir.glob("#{Rails.root}/app/decorators/*/guts/*_decorator*.rb").each do |c
|
        require_dependency(c)
      end
    end

    # Load in our custom assets to precompile
    config.assets.precompile << "#{config.root}/app/assets/javascripts/tinymce/p
lugins/guts_media/plugin.js"
  end
end

   I hope this helps anyone else stuck in a similar situation.

   [4]MD | [5]TXT | [6]CC-4.0

   This post is 8 years old and may contain outdated information.
     __________________________________________________________________

   [7]Tyler King

Ty King

   A self-taught, seasoned, versatile developer from Newfoundland.
   [8]Github [9]About Me [10]CV
     *
     *
     *
     *
     *
     *

References

   1. file:///rss.xml
   2. file:///
   3. https://github.com/spohlenz/tinymce-rails
   4. file:///precompiling-assets-in-your-rails-engine/index.md
   5. file:///precompiling-assets-in-your-rails-engine/index.txt
   6. https://creativecommons.org/licenses/by/4.0/
   7. file:///about
   8. https://github.com/gnikyt
   9. file:///about
  10. file:///assets/files/cv.pdf
